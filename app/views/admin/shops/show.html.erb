<div class="container">
  <div class="row">
    <div class="col-sm-12">
      <p id="notice"><%= notice %></p>

      <h2><%= @shop.name %></h2>
      <% if @shop.discarded_at.present? %>
        <strong class="deleted_message" style="color: red">※削除済み</strong>
      <% end %>

      <table class="table table-bordered">
        <thead>
          <tr>
            <th scope="col">項目</th>
            <th scope="col">情報</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <th scope="row"><%= t(:id, scope: [:models, :base])%></th>
            <td><%= @shop.id %></td>
          <tr>
          <tr>
            <th scope="row"><%= t(:name, scope: [:models, :shop]) %></th>
            <td><%= @shop.name %></td>
          <tr>
          <tr>
            <th scope="row"><%= t(:address, scope: [:models, :shop]) %></th>
            <td><%= @shop.address %></td>
          <tr>
          <tr>
            <th scope="row"><%= t(:latitude, scope: [:models, :shop]) %></th>
            <td><%= @shop.latitude %></td>
          <tr>
          <tr>
            <th scope="row"><%= t(:longitude, scope: [:models, :shop]) %></th>
            <td><%= @shop.longitude %></td>
          <tr>
          <tr>
            <th scope="row"><%= t(:what3words, scope: [:models, :shop]) %></th>
            <td><%= @shop.what_three_words %></td>
          <tr>

        </tbody>
      </table>
      <br />
      
      <div class="row">
        <div class="col">
          <%= link_to admin_shops_path do %>
            <button class="btn btn-primary">ショップ一覧</button>
          <% end %>
        </div>
        <div class="col">
          <%= link_to edit_admin_shop_path(@shop) do %>
            <button class="btn btn-warning">編集</button>
          <% end %>
        </div>
        <div class="col">
          <button class="btn btn-<%= @shop.discarded_at.present? ? "success revival" : "danger delete" %>" id="deleteOrRevivalButton">
            <%= @shop.discarded_at.present? ? "復元" : "削除" %>
          </button>
        </div>
      </div>
      <br />
      <br />
      <strong><%= t(:outside_image, scope: [:models, :shop]) %></strong>
      <div class="row">
        <div class="col">
          <% if @shop.outside_image.attached? %>
            <%= image_tag @shop.outside_image.variant(resize: '100') %>
          <% else %>
            <%= t(:nothing, scope: [:views, :images]) %>
          <% end %>
        </div>
      </div>

      <br />

      <strong><%= t(:inside_image, scope: [:models, :shop]) %></strong>
      <div class="row">
        <div class="col">
          <% if @shop.inside_image.attached? %>
            <%= image_tag @shop.inside_image.variant(resize: '100') if @shop.inside_image.attached? %>
          <% else %>
            <%= t(:nothing, scope: [:views, :images]) %>
          <% end %>
        </div>
      </div>

      <br />

      <strong><%= t(:cooking_image, scope: [:models, :shop]) %>(<%= t(:post_photo_number, scope:[:views, :images], number: @shop.cooking_images.length) %>)</strong>
      <div class="row">
        <% if @shop.cooking_images.length != 0 %>
          <% @shop.cooking_images.each_with_index do |food, idx| %>
            <div class="col">
              <%= image_tag food.variant(resize: '100') %>
            </div>
          <% end %>
        <% else %>
          <div class="col">
              <%= t(:nothing, scope: [:views,:images]) %>
            </div>
        <% end %>
      </div>


      <br />

      <strong><%= t(:address, scope: [:models, :shop]) %>：<%= @shop.address %></strong>
      <div id="map"></div>

      <%= link_to 'Back', shops_path %>
      
      <style>
      html { height: 100% }
      body { height: 100% }
      #map { height: 100%; width: 100% }
      </style>
      
      <script>
        let shopLatLng = {
                           lat: <%= @shop['latitude'] || 39.13960294778968 %>,
                           lng: <%= @shop['longitude'] || 141.14624841562465 %>
                         }
        function initMap() {
          map = new google.maps.Map(document.getElementById('map'), {
            center: shopLatLng,
            zoom: 15
          });
      
          markerLatLng = new google.maps.LatLng(shopLatLng);
      
          marker = new google.maps.Marker({
            position: markerLatLng,
            map: map
          });
        }
      </script>
      <script>
        const swalDeleteButton = Swal.mixin({
          customClass: {
            confirmButton: 'btn btn-success',
            cancelButton: 'btn btn-danger'
          },
          buttonsStyling: false
        });

      $("#deleteOrRevivalButton").click(function() {
          base_url = "/admin/shops/<%= @shop.id %>"
          if ($(this).hasClass("delete")) {
            text = "削除"
            url = base_url
            type = "DELETE"
            changeText = "復元"
            changeClass = 'btn btn-success revival'
          } else {
            text = "復活"
            url = base_url + "/revival"
            type = "PATCH"
            changeText = "削除"
            changeClass = 'btn btn-danger delete'
          }
          swalDeleteButton.fire({
            title: '確認してください',
            text: '本当に' + text + 'しますか？',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: text + 'する',
            cancelButtonText: 'キャンセル',
            reverseButtons: true
          }).then((result) => {
            if (result.isConfirmed) {
              $.ajax({
                url: url,
                type: type,
                dataType: "json"
              }).done(function(data){
                ele = document.getElementById("deleteOrRevivalButton")
                // ボタンのテキストを変更
                $('#deleteOrRevivalButton').text(changeText)
                // ボタンのデザインを変更
                ele.classList.remove(...ele.classList)
                $('#deleteOrRevivalButton').addClass(changeClass)
                // 「削除済み」メッセージの制御
                $('.deleted_message').is(':visible') ?
                    $('.deleted_message').hide()
                    : $('.deleted_message').show()
                Swal.fire(
                  text + "しました!",
                  '正常に' + text + 'されました！',
                  'success'
                )
              }).fail(function(data) {
                Swal.fire(
                  text + 'に失敗しました...',
                  '再度実行してください',
                  'error'
                )
              })
            }
          })
        });
      </script>
      <script async defer src="//maps.googleapis.com/maps/api/js?key=<%= ENV.fetch("GOOGLE_MAP_API_KEY") %>&callback=initMap" type="text/javascript"></script>
    </div>
  </div>
</div>
